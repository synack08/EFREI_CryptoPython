name: D√©ploiement sur AlwaysData

on:
  push:
    branches: [ main ]        # adapte si besoin

env:
  HOST: "ssh-${{ secrets.USERNAME }}.alwaysdata.net"

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Clone le d√©p√¥t dans le runner
      - uses: actions/checkout@v4

      # 1. Connexion SSH + pull / build
      - name: D√©ploiement via SSH
        uses: appleboy/ssh-action@master
        with:
          host:     ${{ env.HOST }}
          username: ${{ secrets.USERNAME }}
          key:      ${{ secrets.SSH_KEY }}   # ‚Üê la cl√© priv√©e que tu viens d‚Äôajouter
          port:     22
          debug:    true                     # utile la 1re fois
          script: |
            set -e
            cd $HOME/www

            repo=$(basename "${GITHUB_REPOSITORY}")
            branch="${{ github.ref_name }}"

            if [ ! -d "$repo" ]; then
              git clone --depth=1 --branch "$branch" https://github.com/${GITHUB_REPOSITORY}.git
            fi

            cd "$repo"
            git pull origin "$branch"

            # Ici, place ton build (pip install, npm install, migrations‚Ä¶)
            echo "üéâ D√©ploiement termin√©"

      # 2. Red√©marrage du site via l‚ÄôAPI AlwaysData
      - name: Restart AlwaysData site
        run: |
          set -e
          code=$(curl -s -o /dev/null -w "%{http_code}" \
                -X POST --user "${{ secrets.ALWAYSDATA_TOKEN }}:" \
                "https://api.alwaysdata.com/v1/site/${{ secrets.ALWAYSDATA_SITE_ID }}/restart/")
          case "$code" in
            204) echo "‚úÖ Site relanc√©" ;;
            401) echo "‚ùå TOKEN incorrect" && exit 1 ;;
            404) echo "‚ùå SITE_ID incorrect" && exit 1 ;;
            *)   echo "‚ùå Erreur API (code $code)" && exit 1 ;;
          esac
